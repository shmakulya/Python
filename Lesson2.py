# Задание 1 +  Создать список и заполнить его элементами различных типов данных. Реализовать
# скрипт проверки типа данных каждого элемента. Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
a = ["HELLO", 2, 3.4]
# Первый вариант решения
print(type(a[0]))
print(type(a[1]))
print(type(a[2]))
# Второй вариант решения
for element in a:
    print(type(element))

#  Задание 2 +  Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются
#  элементы с индексами 0 и 1, 2 и 3 и т.д. При нечетном количестве элементов последний сохранить
# #  на своем месте. Для заполнения списка элементов необходимо использовать функцию input().

a = input("Введите несколько значений: ").split()
for i in range(1, len(a), 2):
    a[i-1], a[i] = a[i], a[i-1]
print(a)

# Задание 3  +  Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить к какому времени года
# относится месяц (зима, весна, лето, осень). Напишите решения через list и через dict.

a = int(input("Введите месяц в виде целого числа от 1 до 12: "))
# Решение через list
my_list = ['1 - Это зима', '2 - Это зима', '3 - Это весна', '4 - Это весна', '5 - Это весна', '6 - Это лето', '7 - Это лето', '8 - Это лето', '9 - Это осень', '10 - Это осень', '11 - Это осень', '12 - Это зима']
a = a - 1
b = my_list.pop(a)
print(b)
# Решение через dict
my_dict = {1: 'Это зима', 2: 'Это зима', 3: 'Это весна', 4: 'Это весна', 5: 'Это весна', 6: 'Это лето', 7: 'Это лето', 8: 'Это лето', 9: 'Это осень', 10: 'Это осень', 11: 'Это осень', 12: 'Это зима'}
print(my_dict.get(a))

# Задание 4 + Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово
# с новой строки. Строки необходимо пронумеровать. Если в слово длинное, выводить только первые 10 букв в слове.
a = input("Введите несколько слов через пробел: ")
a = a.split()
for i, new in enumerate(a, start=1):
    print(i, new[:10])


# Задание 5 + Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с
# одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].

a = [7, 5, 3, 3, 2]
b = [int(input('Введите новый числовой элемент рейтинга: '))]
c = a + b
new_list = sorted(c)
new_list.reverse()
print(new_list)

# Задание 6    * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента — номер товара
# и словарь с параметрами (характеристиками товара: название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
# Пример готовой структуры:
# [
# (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
# Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара, например название, а значение — список значений-характеристик, например список названий товаров.
# Пример:
# {
# “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],
# “ед”: [“шт.”]
# }

goods = []
features = {'название': '', 'цена': '', 'количество': '', 'eд': ''}
analitics = {'название': [], 'цена': [], 'количество': [], 'eд': []}
num = 0

while True:
    if input('Выход - Q, \nЛюбая клавиша - продолжить: ').upper() == 'Q':
        break
    num += 1
    for f in features.keys():
        user_date = input('{}: '.format(f))
        features[f] = int(user_date) if (f == 'цена' or f == 'количество') else user_date
        analitics[f].append(features[f])
    goods.append((num, features))
    print('Текущая аналитика по товарам:\n')
    for key, value in analitics.items():
        print(key, value)